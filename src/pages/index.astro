---
import BaseLayout from "../layouts/BaseLayout.astro";
---

<BaseLayout>
  <head>
    <link rel="stylesheet" href="/assets/css/cookieconsent.css">
    <script>
      // Global reCAPTCHA settings
      window.recaptchaSettings = {
        siteKey: 'YOUR_RECAPTCHA_V3_SITE_KEY',
        action: 'subscribe'
      };
    </script>
  </head>

  <body>
    <!-- [Keep your existing HTML structure here] -->

    <!-- Updated Subscription Form -->
    <div class="div8">
      <form 
        id="subscribeForm" 
        action="/api/subscribe" 
        method="POST" 
        class="subscribe-form"
        data-js="subscribe-form"
      >
        <input 
          type="email" 
          name="email" 
          placeholder="Enter your e-mail" 
          aria-label="Email address for website updates"
          required
          pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$"
        >
        <button 
          type="submit"
          id="submitButton"
          aria-label="Notify me when website launches"
        >
          Notify Me
          <span class="loader" hidden aria-hidden="true"></span>
        </button>
        <div class="sr-only" aria-live="polite" role="status"></div>
      </form>

      <!-- Messages -->
      <div id="messages" aria-live="polite">
        <!-- Success/Error templates here -->
      </div>
    </div>

    <!-- reCAPTCHA v3 -->
    <script src="https://www.google.com/recaptcha/api.js?render=YOUR_RECAPTCHA_V3_SITE_KEY"></script>
    
    <!-- Updated Cookie Consent (v3.1.0) -->
    <script src="https://cdn.jsdelivr.net/gh/orestbida/cookieconsent@v3.1.0/dist/cookieconsent.umd.js"></script>
    
    <!-- Modern JavaScript Module -->
    <script type="module">
      // reCAPTCHA Handling
      const executeRecaptcha = async () => {
        return new Promise((resolve) => {
          grecaptcha.ready(() => {
            grecaptcha.execute(window.recaptchaSettings.siteKey, {
              action: window.recaptchaSettings.action
            }).then(resolve);
          });
        });
      };

      // Form Handling
      const form = document.getElementById('subscribeForm');
      const submitButton = document.getElementById('submitButton');
      const statusMessage = form.querySelector('[role="status"]');

      const handleSubmit = async (event) => {
        event.preventDefault();
        
        // Disable button during submission
        submitButton.disabled = true;
        submitButton.querySelector('.loader').removeAttribute('hidden');

        try {
          // Get reCAPTCHA token
          const token = await executeRecaptcha();
          
          // Prepare form data
          const formData = new FormData(form);
          formData.append('g-recaptcha-response', token);

          // Submit to backend
          const response = await fetch(form.action, {
            method: 'POST',
            body: new URLSearchParams(formData),
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded',
              'X-CSRF-Token': await getCSRFToken() // Implement CSRF
            }
          });

          if (!response.ok) throw new Error(await response.text());
          
          showSuccessMessage();
          form.reset();
        } catch (error) {
          showErrorMessage(error.message || 'Submission failed');
          console.error('Submission error:', error);
        } finally {
          submitButton.disabled = false;
          submitButton.querySelector('.loader').setAttribute('hidden', '');
        }
      };

      // Event Listeners
      form.addEventListener('submit', handleSubmit);
      
      // Message Handling
      const showSuccessMessage = () => {
        statusMessage.textContent = 'Thank you for subscribing!';
        // Update visible messages
      };

      const showErrorMessage = (message) => {
        statusMessage.textContent = message;
        // Update visible messages
      };

      // CSRF Token (Example implementation)
      const getCSRFToken = async () => {
        // Implement your CSRF token retrieval logic
        return 'YOUR_CSRF_TOKEN';
      };
    </script>
  </body>
</BaseLayout>
